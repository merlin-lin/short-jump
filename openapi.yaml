# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    description: User management service definition
    version: 0.0.1
paths:
    /api/v1/login:
        post:
            tags:
                - User
            description: 用户登录
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/register:
        post:
            tags:
                - User
            description: 用户注册
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users:
        post:
            tags:
                - User
            description: 创建用户
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/{id}:
        get:
            tags:
                - User
            description: 获取用户信息
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            description: 更新用户信息
            operationId: User_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            description: 删除用户（软删除）
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/{id}/disable:
        patch:
            tags:
                - User
            description: 禁用用户
            operationId: User_DisableUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DisableUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/{id}/enable:
        patch:
            tags:
                - User
            description: 启用用户
            operationId: User_EnableUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnableUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateUserRequest:
            type: object
            properties:
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                password:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
        CreateUserResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: int32
        DeleteUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
        DisableUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
        EnableUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
        GetUserResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
                status:
                    type: integer
                    format: int32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LoginRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        LoginResponse:
            type: object
            properties:
                token:
                    type: string
                User:
                    $ref: '#/components/schemas/GetUserResponse'
        RegisterRequest:
            type: object
            properties:
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
                password:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
                status:
                    type: integer
                    format: int32
        UpdateUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
tags:
    - name: User
