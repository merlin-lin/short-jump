# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/login:
        post:
            tags:
                - User
            description: 用户登录
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.LoginResponse'
    /api/v1/users:
        post:
            tags:
                - User
            description: 创建用户
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CreateUserResponse'
    /api/v1/users/{id}:
        get:
            tags:
                - User
            description: 获取用户信息
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.GetUserResponse'
        put:
            tags:
                - User
            description: 更新用户信息
            operationId: User_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateUserResponse'
        delete:
            tags:
                - User
            description: 删除用户（软删除）
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.DeleteUserResponse'
    /api/v1/users/{id}/disable:
        patch:
            tags:
                - User
            description: 禁用用户
            operationId: User_DisableUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.DisableUserResponse'
    /api/v1/users/{id}/enable:
        patch:
            tags:
                - User
            description: 启用用户
            operationId: User_EnableUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.EnableUserResponse'
    /helloshort/{name}:
        get:
            tags:
                - Shorturl
            operationId: Shorturl_Hello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.shorturl.v1.HelloResp'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/shorturl:
        post:
            tags:
                - Shorturl
            operationId: Shorturl_CreateShorturl
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.shorturl.v1.CreateShorturlRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.shorturl.v1.CreateShorturlReply'
components:
    schemas:
        api.shorturl.v1.CreateShorturlReply:
            type: object
            properties: {}
        api.shorturl.v1.CreateShorturlRequest:
            type: object
            properties:
                url:
                    type: string
        api.shorturl.v1.HelloResp:
            type: object
            properties:
                message:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.CreateUserRequest:
            type: object
            properties:
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                password:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
        user.v1.CreateUserResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: int32
        user.v1.DeleteUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
        user.v1.DisableUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
        user.v1.EnableUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
        user.v1.GetUserResponse:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
                status:
                    type: integer
                    format: int32
        user.v1.LoginRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        user.v1.LoginResponse:
            type: object
            properties:
                token:
                    type: string
                User:
                    $ref: '#/components/schemas/user.v1.GetUserResponse'
        user.v1.UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                email:
                    type: string
                phone:
                    type: string
                username:
                    type: string
                avatarUrl:
                    type: string
                bio:
                    type: string
                status:
                    type: integer
                    format: int32
        user.v1.UpdateUserResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: int32
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: Shorturl
    - name: User
      description: User management service definition
